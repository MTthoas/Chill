/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IntentFiAdvanced,
  IntentFiAdvancedInterface,
} from "../IntentFiAdvanced";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_priceFeed",
        type: "address",
        internalType: "address",
      },
      {
        name: "_ccipRouter",
        type: "address",
        internalType: "address",
      },
      {
        name: "_linkToken",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "MAX_INTENTS_PER_CHECK",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_SLIPPAGE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "PRICE_FEED_HEARTBEAT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "advancedIntents",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "advancedType",
        type: "uint8",
        internalType: "enum IntentFiAdvanced.AdvancedIntentType",
      },
      {
        name: "triggerPrice",
        type: "int256",
        internalType: "int256",
      },
      {
        name: "upperBound",
        type: "int256",
        internalType: "int256",
      },
      {
        name: "lowerBound",
        type: "int256",
        internalType: "int256",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "frequency",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "lastExecution",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "maxExecutions",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "executionCount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "tokenAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "destinationChainSelector",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "destinationReceiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "isActive",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "extraData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "allowlistDestinationChain",
    inputs: [
      {
        name: "_destinationChainSelector",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "allowed",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "allowlistedDestinationChains",
    inputs: [
      {
        name: "",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "cancelAdvancedIntent",
    inputs: [
      {
        name: "intentId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelIntent",
    inputs: [
      {
        name: "_intentId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "ccipRouterAddress",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "checkUpkeep",
    inputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "upkeepNeeded",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "performData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "createDCAIntent",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct IntentFiAdvanced.DCAParams",
        components: [
          {
            name: "investmentAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "intervalSeconds",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "totalPeriods",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "targetToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "slippageTolerance",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "destinationChain",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "intentId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "createIntent",
    inputs: [
      {
        name: "_intentType",
        type: "uint8",
        internalType: "enum IntentFi.IntentType",
      },
      {
        name: "_triggerPrice",
        type: "int256",
        internalType: "int256",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_tokenAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "_destinationChainSelector",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "_destinationReceiver",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "intentId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "createRangeIntent",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct IntentFiAdvanced.RangeParams",
        components: [
          {
            name: "buyPrice",
            type: "int256",
            internalType: "int256",
          },
          {
            name: "sellPrice",
            type: "int256",
            internalType: "int256",
          },
          {
            name: "tradeAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxTrades",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "destinationChain",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "intentId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "createYieldIntent",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct IntentFiAdvanced.YieldParams",
        components: [
          {
            name: "yieldProtocol",
            type: "address",
            internalType: "address",
          },
          {
            name: "minYield",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "stakingAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "compoundFrequency",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "destinationChain",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "intentId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "executeDCAIntent",
    inputs: [
      {
        name: "intentId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "executeIntent",
    inputs: [
      {
        name: "_intentId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "executeRangeIntent",
    inputs: [
      {
        name: "intentId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "fundLINK",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getActiveIntents",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAdvancedIntentDetails",
    inputs: [
      {
        name: "intentId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IntentFiAdvanced.AdvancedIntent",
        components: [
          {
            name: "id",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "user",
            type: "address",
            internalType: "address",
          },
          {
            name: "advancedType",
            type: "uint8",
            internalType: "enum IntentFiAdvanced.AdvancedIntentType",
          },
          {
            name: "triggerPrice",
            type: "int256",
            internalType: "int256",
          },
          {
            name: "upperBound",
            type: "int256",
            internalType: "int256",
          },
          {
            name: "lowerBound",
            type: "int256",
            internalType: "int256",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "frequency",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "lastExecution",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxExecutions",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "executionCount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "tokenAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "destinationChainSelector",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "destinationReceiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "isActive",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "extraData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCCIPRouter",
    inputs: [],
    outputs: [
      {
        name: "router",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentPrice",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "int256",
        internalType: "int256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getIntentDetails",
    inputs: [
      {
        name: "_intentId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IntentFi.Intent",
        components: [
          {
            name: "id",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "intentType",
            type: "uint8",
            internalType: "enum IntentFi.IntentType",
          },
          {
            name: "triggerPrice",
            type: "int256",
            internalType: "int256",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "tokenAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "destinationChainSelector",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "destinationReceiver",
            type: "address",
            internalType: "address",
          },
          {
            name: "status",
            type: "uint8",
            internalType: "enum IntentFi.IntentStatus",
          },
          {
            name: "createdAt",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "lastChecked",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLINKBalance",
    inputs: [],
    outputs: [
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLINKToken",
    inputs: [],
    outputs: [
      {
        name: "link",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getUserAdvancedIntents",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getUserIntents",
    inputs: [
      {
        name: "_user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "intents",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "id",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "intentType",
        type: "uint8",
        internalType: "enum IntentFi.IntentType",
      },
      {
        name: "triggerPrice",
        type: "int256",
        internalType: "int256",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "tokenAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "destinationChainSelector",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "destinationReceiver",
        type: "address",
        internalType: "address",
      },
      {
        name: "status",
        type: "uint8",
        internalType: "enum IntentFi.IntentStatus",
      },
      {
        name: "createdAt",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "lastChecked",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isTokenSupported",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "supported",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "nextAdvancedIntentId",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pauseAdvancedIntents",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "performUpkeep",
    inputs: [
      {
        name: "performData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setSupportedToken",
    inputs: [
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_supported",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setSupportedYieldProtocol",
    inputs: [
      {
        name: "protocol",
        type: "address",
        internalType: "address",
      },
      {
        name: "supported",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportedYieldProtocols",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateCCIPRouter",
    inputs: [
      {
        name: "_newRouter",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updatePriceFeed",
    inputs: [
      {
        name: "_newPriceFeed",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "userAdvancedIntents",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "userIntents",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "_beneficiary",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdrawLINK",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdrawToken",
    inputs: [
      {
        name: "_beneficiary",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AdvancedIntentCreated",
    inputs: [
      {
        name: "id",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "advancedType",
        type: "uint8",
        indexed: false,
        internalType: "enum IntentFiAdvanced.AdvancedIntentType",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "CCIPMessageSent",
    inputs: [
      {
        name: "messageId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "destinationChainSelector",
        type: "uint64",
        indexed: true,
        internalType: "uint64",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "token",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "CrossChainMessageSent",
    inputs: [
      {
        name: "intentId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "destinationChainSelector",
        type: "uint64",
        indexed: true,
        internalType: "uint64",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DCAExecuted",
    inputs: [
      {
        name: "intentId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "executionNumber",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "price",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "IntentCancelled",
    inputs: [
      {
        name: "intentId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "IntentCreated",
    inputs: [
      {
        name: "intentId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "intentType",
        type: "uint8",
        indexed: false,
        internalType: "enum IntentFi.IntentType",
      },
      {
        name: "triggerPrice",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "destinationChain",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
      {
        name: "destinationReceiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "IntentExecuted",
    inputs: [
      {
        name: "intentId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "destinationChainSelector",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
      {
        name: "receiver",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RangeTradeExecuted",
    inputs: [
      {
        name: "intentId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "isBuy",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "price",
        type: "int256",
        indexed: false,
        internalType: "int256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "YieldHarvested",
    inputs: [
      {
        name: "intentId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "yield",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "protocol",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "DestinationChainNotAllowed",
    inputs: [
      {
        name: "destinationChainSelector",
        type: "uint64",
        internalType: "uint64",
      },
    ],
  },
  {
    type: "error",
    name: "FailedToWithdrawEth",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "IntentAlreadyExecuted",
    inputs: [
      {
        name: "intentId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "IntentNotFound",
    inputs: [
      {
        name: "intentId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidReceiverAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "NotEnoughBalance",
    inputs: [
      {
        name: "currentBalance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "NothingToWithdraw",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ReentrancyGuardReentrantCall",
    inputs: [],
  },
  {
    type: "error",
    name: "UnauthorizedIntentExecution",
    inputs: [
      {
        name: "caller",
        type: "address",
        internalType: "address",
      },
      {
        name: "intentOwner",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

export class IntentFiAdvanced__factory {
  static readonly abi = _abi;
  static createInterface(): IntentFiAdvancedInterface {
    return new Interface(_abi) as IntentFiAdvancedInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IntentFiAdvanced {
    return new Contract(address, _abi, runner) as unknown as IntentFiAdvanced;
  }
}
